name: Terraform PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'infra/terraform/**'

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    # Skip if PR is in draft state
    if: github.event.pull_request.draft == false
    
    permissions:
      pull-requests: write
      contents: read
    
    defaults:
      run:
        working-directory: ./infra/terraform
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TERRAFORM_VERSION }}
      
      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION }}
          TF_VAR_project: ${{ vars.PROJECT }}
          TF_VAR_database_name: ${{ vars.DATABASE_NAME }}
          TF_VAR_master_username: ${{ secrets.DATABASE_MASTER_USERNAME }}
          TF_VAR_tag_project: ${{ vars.TAG_PROJECT }}
          TF_VAR_tag_owner: ${{ vars.TAG_OWNER }}
      
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION }}
          TF_VAR_project: ${{ vars.PROJECT }}
          TF_VAR_database_name: ${{ vars.DATABASE_NAME }}
          TF_VAR_master_username: ${{ secrets.DATABASE_MASTER_USERNAME }}
          TF_VAR_tag_project: ${{ vars.TAG_PROJECT }}
          TF_VAR_tag_owner: ${{ vars.TAG_OWNER }}
      
      - name: Convert PR to draft if Terraform Plan fails
        if: steps.plan.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              draft: true
            });
            core.setFailed('Terraform plan failed. PR has been converted to draft.');
      
      - name: Fail job if Terraform Plan failed
        if: steps.plan.outcome == 'failure'
        run: exit 1
